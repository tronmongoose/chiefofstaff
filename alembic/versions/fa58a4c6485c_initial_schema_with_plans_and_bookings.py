"""Initial schema with plans and bookings

Revision ID: fa58a4c6485c
Revises: 
Create Date: 2025-06-29 17:41:46.745109

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fa58a4c6485c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First drop the foreign key constraint if it exists
    try:
        op.drop_constraint('bookings_travel_plan_id_fkey', 'bookings', type_='foreignkey')
    except:
        pass  # Constraint might not exist
    
    # Drop the travel_plans table if it exists
    try:
        op.drop_index('ix_travel_plans_id', table_name='travel_plans')
        op.drop_index('ix_travel_plans_user_id', table_name='travel_plans')
        op.drop_table('travel_plans')
    except:
        pass  # Table might not exist
    
    # Add the new plan_id column to bookings
    op.add_column('bookings', sa.Column('plan_id', sa.UUID(), nullable=True))
    
    # Create the foreign key to plans table
    op.create_foreign_key(None, 'bookings', 'plans', ['plan_id'], ['id'])
    
    # Drop the old travel_plan_id column
    try:
        op.drop_column('bookings', 'travel_plan_id')
    except:
        pass  # Column might not exist
    
    # Update plans table constraints
    op.alter_column('plans', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'generated'::character varying"))
    
    # Update indexes
    try:
        op.drop_index('idx_plans_created_at', table_name='plans')
        op.drop_index('idx_plans_status', table_name='plans')
        op.drop_index('idx_plans_user_wallet', table_name='plans')
    except:
        pass  # Indexes might not exist
    
    op.create_index(op.f('ix_plans_created_at'), 'plans', ['created_at'], unique=False)
    op.create_index(op.f('ix_plans_status'), 'plans', ['status'], unique=False)
    op.create_index(op.f('ix_plans_user_wallet'), 'plans', ['user_wallet'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plans_user_wallet'), table_name='plans')
    op.drop_index(op.f('ix_plans_status'), table_name='plans')
    op.drop_index(op.f('ix_plans_created_at'), table_name='plans')
    op.create_index(op.f('idx_plans_user_wallet'), 'plans', ['user_wallet'], unique=False)
    op.create_index(op.f('idx_plans_status'), 'plans', ['status'], unique=False)
    op.create_index(op.f('idx_plans_created_at'), 'plans', ['created_at'], unique=False)
    op.alter_column('plans', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'generated'::character varying"))
    op.add_column('bookings', sa.Column('travel_plan_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.create_foreign_key(op.f('bookings_travel_plan_id_fkey'), 'bookings', 'travel_plans', ['travel_plan_id'], ['id'])
    op.drop_column('bookings', 'plan_id')
    op.create_table('travel_plans',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('destination', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('plan_details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('travel_plans_pkey'))
    )
    op.create_index(op.f('ix_travel_plans_user_id'), 'travel_plans', ['user_id'], unique=False)
    op.create_index(op.f('ix_travel_plans_id'), 'travel_plans', ['id'], unique=False)
    # ### end Alembic commands ### 